from math import sqrt

x1, y1 = map(int, input("Введите координаты вершины A (x1, y1): ").split())
x2, y2 = map(int, input("Введите координаты вершины B (x2, y2): ").split())
x3, y3 = map(int, input("Введите координаты вершины C (x3, y3): ").split())
x4, y4 = map(int, input("Введите координаты вершины D (x4, y4): ").split())

# Вычисление длин сторон, основываясь на координатах вершин и теореме Пифагора
ab = sqrt(abs(x1 - x2) ** 2 + abs(y1 - y2) ** 2)
bc = sqrt(abs(x2 - x3) ** 2 + abs(y2 - y3) ** 2)
cd = sqrt(abs(x3 - x4) ** 2 + abs(y3 - y4) ** 2)
ad = sqrt(abs(x1 - x4) ** 2 + abs(y1 - y4) ** 2)

if ab == bc == cd == ad:
    # Далее следует проверка, что чет-к - квадрат, а не ромб
    # Она осуществляется на основе скалярного произведения пары противоположных углов чет-ка
    if ((x2 - x1 == 0 and y4 - y1 == 0 and x4 - x3 == 0 and y2 - y3 == 0) or
            (y2 - y1 == 0 and x4 - x1 == 0 and y4 - y3 == 0 and x2 - x3 == 0)):
        print("Квадрат")
    else:
        print("Ромб (частный случай параллелограмма)")
elif ((x2 - x1 == 0 and y4 - y1 == 0 and x4 - x3 == 0 and y2 - y3 == 0) or
      (y2 - y1 == 0 and x4 - x1 == 0 and y4 - y3 == 0 and x2 - x3 == 0)):
    print("Прямоугольник")
elif ab == cd and bc == ad:
    print("Параллелограмм")
elif (((y2 - y1) * (x4 - x3) == (y4 - y3) * (x2 - x1) and (y3 - y2) * (x4 - x1) != (y4 - y1) * (x3 - x2)) or
      ((y2 - y1) * (x4 - x3) != (y4 - y3) * (x2 - x1) and (y3 - y2) * (x4 - x1) == (y4 - y1) * (x3 - x2))):
    # Проверка осуществляется за счет проверки коэффициента k прямых, которые задают противоположные стороны чет-ка
    # Если у одной пары прямых k одинаковый, значит, они параллельны; при этом k другой пары прямых должен отличаться
    # k1 = (y2 - y1) / (x2 - x1); k3 = (y4 - y3) / (x4 - x3)
    print("Трапеция")
else:
    print("Другой")

print(f"Координаты вершины A: ({x1}, {y1})")
print(f"Координаты вершины B: ({x2}, {y2})")
print(f"Координаты вершины C: ({x3}, {y3})")
print(f"Координаты вершины D: ({x4}, {y4})")
print(f"Длина стороны AB: {ab}")
print(f"Длина стороны BC: {bc}")
